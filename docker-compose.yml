version: "3.9"

services:
  api:
    container_name: api
    build: .
    volumes:
      - .:/app
    ports:
      - 3000:3000
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=db
      - NODE_ENV=${NODE_ENV}
    depends_on:
      db:
        condition: service_healthy

  db:
    container_name: db
    image: postgres:14-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      # - POSTGRES_HOST=${POSTGRES_HOST}
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 7s
      timeout: 5s
      retries: 3
      start_period: 10s

  migration:
    container_name: migration
    build: .
    command: yarn typeorm migration:run -d src/data-source.ts
    volumes:
      - .:/app
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=db
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data:
